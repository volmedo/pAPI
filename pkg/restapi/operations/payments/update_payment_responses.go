// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/volmedo/pAPI/pkg/models"
)

// UpdatePaymentOKCode is the HTTP code returned for type UpdatePaymentOK
const UpdatePaymentOKCode int = 200

/*UpdatePaymentOK Payment details

swagger:response updatePaymentOK
*/
type UpdatePaymentOK struct {

	/*
	  In: Body
	*/
	Payload *models.PaymentUpdateResponse `json:"body,omitempty"`
}

// NewUpdatePaymentOK creates UpdatePaymentOK with default headers values
func NewUpdatePaymentOK() *UpdatePaymentOK {

	return &UpdatePaymentOK{}
}

// WithPayload adds the payload to the update payment o k response
func (o *UpdatePaymentOK) WithPayload(payload *models.PaymentUpdateResponse) *UpdatePaymentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update payment o k response
func (o *UpdatePaymentOK) SetPayload(payload *models.PaymentUpdateResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePaymentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePaymentNotFoundCode is the HTTP code returned for type UpdatePaymentNotFound
const UpdatePaymentNotFoundCode int = 404

/*UpdatePaymentNotFound Payment Not Found

swagger:response updatePaymentNotFound
*/
type UpdatePaymentNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewUpdatePaymentNotFound creates UpdatePaymentNotFound with default headers values
func NewUpdatePaymentNotFound() *UpdatePaymentNotFound {

	return &UpdatePaymentNotFound{}
}

// WithPayload adds the payload to the update payment not found response
func (o *UpdatePaymentNotFound) WithPayload(payload *models.APIError) *UpdatePaymentNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update payment not found response
func (o *UpdatePaymentNotFound) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePaymentNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdatePaymentTooManyRequestsCode is the HTTP code returned for type UpdatePaymentTooManyRequests
const UpdatePaymentTooManyRequestsCode int = 429

/*UpdatePaymentTooManyRequests Too Many Requests

swagger:response updatePaymentTooManyRequests
*/
type UpdatePaymentTooManyRequests struct {
}

// NewUpdatePaymentTooManyRequests creates UpdatePaymentTooManyRequests with default headers values
func NewUpdatePaymentTooManyRequests() *UpdatePaymentTooManyRequests {

	return &UpdatePaymentTooManyRequests{}
}

// WriteResponse to the client
func (o *UpdatePaymentTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(429)
}

// UpdatePaymentInternalServerErrorCode is the HTTP code returned for type UpdatePaymentInternalServerError
const UpdatePaymentInternalServerErrorCode int = 500

/*UpdatePaymentInternalServerError Internal Server Error

swagger:response updatePaymentInternalServerError
*/
type UpdatePaymentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewUpdatePaymentInternalServerError creates UpdatePaymentInternalServerError with default headers values
func NewUpdatePaymentInternalServerError() *UpdatePaymentInternalServerError {

	return &UpdatePaymentInternalServerError{}
}

// WithPayload adds the payload to the update payment internal server error response
func (o *UpdatePaymentInternalServerError) WithPayload(payload *models.APIError) *UpdatePaymentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update payment internal server error response
func (o *UpdatePaymentInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdatePaymentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
