// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/volmedo/pAPI/pkg/models"
)

// CreatePaymentCreatedCode is the HTTP code returned for type CreatePaymentCreated
const CreatePaymentCreatedCode int = 201

/*CreatePaymentCreated Payment created successfully

swagger:response createPaymentCreated
*/
type CreatePaymentCreated struct {

	/*
	  In: Body
	*/
	Payload *models.PaymentCreationResponse `json:"body,omitempty"`
}

// NewCreatePaymentCreated creates CreatePaymentCreated with default headers values
func NewCreatePaymentCreated() *CreatePaymentCreated {

	return &CreatePaymentCreated{}
}

// WithPayload adds the payload to the create payment created response
func (o *CreatePaymentCreated) WithPayload(payload *models.PaymentCreationResponse) *CreatePaymentCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create payment created response
func (o *CreatePaymentCreated) SetPayload(payload *models.PaymentCreationResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreatePaymentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreatePaymentConflictCode is the HTTP code returned for type CreatePaymentConflict
const CreatePaymentConflictCode int = 409

/*CreatePaymentConflict A payment with the given ID already exists

swagger:response createPaymentConflict
*/
type CreatePaymentConflict struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewCreatePaymentConflict creates CreatePaymentConflict with default headers values
func NewCreatePaymentConflict() *CreatePaymentConflict {

	return &CreatePaymentConflict{}
}

// WithPayload adds the payload to the create payment conflict response
func (o *CreatePaymentConflict) WithPayload(payload *models.APIError) *CreatePaymentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create payment conflict response
func (o *CreatePaymentConflict) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreatePaymentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreatePaymentTooManyRequestsCode is the HTTP code returned for type CreatePaymentTooManyRequests
const CreatePaymentTooManyRequestsCode int = 429

/*CreatePaymentTooManyRequests Too Many Requests

swagger:response createPaymentTooManyRequests
*/
type CreatePaymentTooManyRequests struct {
}

// NewCreatePaymentTooManyRequests creates CreatePaymentTooManyRequests with default headers values
func NewCreatePaymentTooManyRequests() *CreatePaymentTooManyRequests {

	return &CreatePaymentTooManyRequests{}
}

// WriteResponse to the client
func (o *CreatePaymentTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(429)
}

// CreatePaymentInternalServerErrorCode is the HTTP code returned for type CreatePaymentInternalServerError
const CreatePaymentInternalServerErrorCode int = 500

/*CreatePaymentInternalServerError Internal Server Error

swagger:response createPaymentInternalServerError
*/
type CreatePaymentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewCreatePaymentInternalServerError creates CreatePaymentInternalServerError with default headers values
func NewCreatePaymentInternalServerError() *CreatePaymentInternalServerError {

	return &CreatePaymentInternalServerError{}
}

// WithPayload adds the payload to the create payment internal server error response
func (o *CreatePaymentInternalServerError) WithPayload(payload *models.APIError) *CreatePaymentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create payment internal server error response
func (o *CreatePaymentInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreatePaymentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
