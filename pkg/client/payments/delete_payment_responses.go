// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/volmedo/pAPI/pkg/models"
)

// DeletePaymentReader is a Reader for the DeletePayment structure.
type DeletePaymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePaymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeletePaymentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeletePaymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePaymentNoContent creates a DeletePaymentNoContent with default headers values
func NewDeletePaymentNoContent() *DeletePaymentNoContent {
	return &DeletePaymentNoContent{}
}

/*DeletePaymentNoContent handles this case with default header values.

Payment deleted OK. No body content will be returned
*/
type DeletePaymentNoContent struct {
}

func (o *DeletePaymentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /payments/{id}][%d] deletePaymentNoContent ", 204)
}

func (o *DeletePaymentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePaymentNotFound creates a DeletePaymentNotFound with default headers values
func NewDeletePaymentNotFound() *DeletePaymentNotFound {
	return &DeletePaymentNotFound{}
}

/*DeletePaymentNotFound handles this case with default header values.

Payment Not Found
*/
type DeletePaymentNotFound struct {
	Payload *models.APIError
}

func (o *DeletePaymentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /payments/{id}][%d] deletePaymentNotFound  %+v", 404, o.Payload)
}

func (o *DeletePaymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
